{"version":3,"sources":["../src/SnackBarManager.js"],"names":["SnackBarManager","_setCurrent","props","callback","onAutoDismiss","dismiss","current","_removeCurrent","destroy","get","queue","add","title","options","push","show","_isItemAlreadyExistById","unshift","length","shift","id","find","item"],"mappings":"yRAAA,4B;AACA,mE;;;AAGA,oC;;AAEqBA,e;;;;AAInB,0BAAe;;;;;AAKfC,WALe,CAKD,SAACC,KAAD,CAAgE,IAAzCC,SAAyC,2DAAnB,UAAM,CAAE,CAAW;AAC5E,GAAI,EAAE,iBAAmBD,MAArB,CAAJ,CAAiC;AAC/BA,MAAME,aAAN,CAAsB,MAAKC,OAA3B;AACD;;AAED,GAAMC,SAAU,sCAAiB,iDAAcJ,KAAd,CAAjB,CAAhB;AACH,MAAKI,OAAL,CAAeA,OAAf;AACAH;AACE,CAbc;;AAefI,cAfe,CAeE,UAA0C,IAAzCJ,SAAyC,2DAAnB,UAAM,CAAE,CAAW;AACzD,GAAI,CAAC,MAAKG,OAAV,CAAmB;AACjBH;AACA;AACD;;AAED,MAAKG,OAAL,CAAaE,OAAb,CAAqB,UAAM;AACzB,MAAKF,OAAL,CAAe,IAAf;AACAH;AACD,CAHD;AAID,CAzBc;;AA2BfM,GA3Be,CA2BT,UAAM;AACV,MAAO;AACLH,QAAS,MAAKA,OADT;AAELI,MAAO,MAAKA,KAFP,CAAP;;AAID,CAhCc;;AAkCfC,GAlCe,CAkCT;AACJC,KADI;AAEJC,OAFI;;AAIK,IADTV,SACS,2DADa,UAAM,CAAE,CACrB;AACT,GAAMD,iBAAUU,WAAV,EAAoBC,OAApB,CAAN;;AAEA,GAAI,MAAKP,OAAT,CAAkB;AAChB,MAAKI,KAAL,CAAWI,IAAX,CAAgBZ,KAAhB;AACAC;AACA;AACD;;AAED,MAAKF,WAAL,CAAiBC,KAAjB,CAAwBC,QAAxB;AACD,CAhDc;;AAkDfY,IAlDe,CAkDR;AACLH,KADK;AAELC,OAFK;;AAII,IADTV,SACS,2DADa,UAAM,CAAE,CACrB;AACT,GAAMD,iBAAUU,WAAV,EAAoBC,OAApB,CAAN;;AAEA,GAAI,MAAKP,OAAT,CAAkB;AAChB,GAAI,MAAKU,uBAAL,CAA6Bd,KAA7B,CAAJ,CAAyC;AACvC;AACD;AACD,MAAKQ,KAAL,CAAWO,OAAX,CAAmBf,KAAnB;AACAC;AACA;AACD;;AAED,MAAKF,WAAL,CAAiBC,KAAjB,CAAwBC,QAAxB;AACD,CAnEc;;AAqEfE,OArEe,CAqEL,UAA0C,IAAzCF,SAAyC,2DAAnB,UAAM,CAAE,CAAW;AAClD,MAAKI,cAAL,CAAoB,UAAM;AACxB,GAAI,CAAC,MAAKG,KAAL,CAAWQ,MAAhB,CAAwB;AACtBf;AACA;AACD;;AAED,GAAMG,SAAU,MAAKI,KAAL,CAAWS,KAAX,EAAhB;AACA,MAAKlB,WAAL,CAAiBK,OAAjB,CAA0BH,QAA1B;AACD,CARD;AASD,CA/Ec;;AAiFfa,uBAjFe,CAiFW;AACxBd,KADwB;AAEZ;AACZ,MAAOA,OAAMkB,EAAN,EAAY,MAAKV,KAAL,CAAWW,IAAX,CAAgB,qBAAQC,MAAKF,EAAL,GAAYlB,MAAMkB,EAA1B,EAAhB,CAAnB;AACD,CArFc,CACb,KAAKd,OAAL,CAAe,IAAf,CACA,KAAKI,KAAL,CAAa,EAAb,CACD,C,iBAPkBV,e","file":"SnackBarManager.js","sourcesContent":["import React from 'react'\nimport RootSiblings from 'react-native-root-siblings'\n\nimport type { SnackItemType } from './type'\nimport SnackBar from './SnackBar'\n\nexport default class SnackBarManager {\n  current: SnackItemType\n  queue: Array<SnackItemType>\n\n  constructor () {\n    this.current = null\n    this.queue = []\n  }\n\n  _setCurrent = (props: SnackItemType, callback?: Function = () => {}): void => {\n    if (!('onAutoDismiss' in props)) {\n      props.onAutoDismiss = this.dismiss\n    }\n\n    const current = new RootSiblings(<SnackBar {...props} />)\n\tthis.current = current\n\tcallback()\n  }\n\n  _removeCurrent = (callback?: Function = () => {}): void => {\n    if (!this.current) {\n      callback()\n      return\n    }\n\n    this.current.destroy(() => {\n      this.current = null\n      callback()\n    })\n  }\n\n  get = () => {\n    return {\n      current: this.current,\n      queue: this.queue\n    }\n  }\n\n  add = (\n    title: string,\n    options?: SnackItemType,\n    callback?: Function = () => {}\n  ): void => {\n    const props = { title, ...options }\n\n    if (this.current) {\n      this.queue.push(props)\n      callback()\n      return\n    }\n\n    this._setCurrent(props, callback)\n  }\n\n  show = (\n    title: string,\n    options?: SnackItemType,\n    callback?: Function = () => {}\n  ): void => {\n    const props = { title, ...options }\n\n    if (this.current) {\n      if (this._isItemAlreadyExistById(props)) {\n        return\n      }\n      this.queue.unshift(props)\n      callback()\n      return\n    }\n\n    this._setCurrent(props, callback)\n  }\n\n  dismiss = (callback?: Function = () => {}): void => {\n    this._removeCurrent(() => {\n      if (!this.queue.length) {\n        callback()\n        return\n      }\n\n      const current = this.queue.shift()\n      this._setCurrent(current, callback)\n    })\n  }\n\n  _isItemAlreadyExistById = (\n    props\n  ): boolean => {\n    return props.id && this.queue.find(item => item.id === props.id)\n  }\n}\n"]}